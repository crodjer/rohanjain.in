#!/usr/bin/env bash

# This hook will generate a new site in the branch where that is tracked.
# Cloned from https://gist.github.com/1002667


# Find the number of uncommited, untracked or unstaged files present
CHANGED_FILES=`git status --porcelain 2>/dev/null| egrep "^(??|M| M)" | wc -l`

if [ $CHANGED_FILES -ne "0" ]; then
    echo "Changed files present, won't update the site."
    git status --porcelain
    exit
fi

ERROR=0

# git executable
_git="git"

# site generation executable
_generate="jekyll"
# options for the generator
_opts=(--no-safe --no-server --no-auto --kramdown)

# branch from which to generate site
_origbranch="master"
# branch holding the generated site
_destbranch="gh-pages"

# directory holding the generated site -- should be outside this repo
_site="$("mktemp" -d /tmp/_site.XXXXXXXXX)"
let ERROR+=$?
# the current branch
_currbranch="$(grep "^*" < <("$_git" branch) | cut -d' ' -f2)"
let ERROR+=$?

if [[ $_currbranch == $_origbranch ]]; then # we should generate the site
    # go to root dir of the repo
    cd "$("$_git" rev-parse --show-toplevel)"
    # generate the site
    "$_generate" ${_opts[@]} . "$_site"
    let ERROR+=$?
    # switch to branch the site will be stored
    "$_git" checkout "$_destbranch"
    let ERROR+=$?

    # Make sure if all the above commands are executed, so that no changes are
    # made to the master branch.
    if [ "$ERROR" -ne "0" ]; then
        echo "Errors occurred in previous commands, Won't do anything."
    else
        # overwrite existing files
        builtin shopt -s dotglob
        cp -rf "$_site"/* .
        builtin shopt -u dotglob
        # add any new files
        "$_git" add .
        # commit all changes with a default message
        "$_git" commit -a -m "updated site @ $(date +"%F %T")"
    fi

    # return
    "$_git" checkout "$_origbranch"
fi

# cleanup
rm -rf "$_site"
