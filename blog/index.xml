<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on The Perpetual Amature</title><link>/blog/</link><description>Recent content in Blog on The Perpetual Amature</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Sun, 26 Oct 2025 09:27:21 +0530</lastBuildDate><atom:link href="/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Self Hosting Gitlab using Quadlets</title><link>/gitlab/</link><pubDate>Sun, 26 Oct 2025 09:27:21 +0530</pubDate><guid>/gitlab/</guid><description>&lt;h3 id="what-are-quadlets"&gt;What are Quadlets?&lt;/h3&gt;
&lt;p&gt;I self-host most of my services important to me personally. Lately, I have been
using &lt;a href="https://www.redhat.com/en/blog/quadlet-podman"&gt;Quadlets&lt;/a&gt; for this. I came
across the concept of Quadlets from Immich.&lt;/p&gt;
&lt;p&gt;For git repositories, I have been just using &lt;code&gt;git init --bare&lt;/code&gt; in a server and
plain SSH to work them: &lt;code&gt;git clone git@&amp;lt;user&amp;gt;:sources/&amp;lt;repo&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Having used Quadlets with Immich, I thought of trying using them with Gitlab.
And this post talks about how to do that.&lt;/p&gt;</description></item><item><title>Bootstrapping pipx for the obsessed</title><link>/pipx/</link><pubDate>Sat, 04 Sep 2021 19:41:19 +0530</pubDate><guid>/pipx/</guid><description>&lt;p&gt;Managing Python based applications is made easy with
&lt;a href="https://github.com/pypa/pipx"&gt;pipx&lt;/a&gt;. But I dislike installing pipx
via a pip user install, as it results in two python utilities
managing packages. So, instead I let pipx manage it&amp;rsquo;s own updates.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s how we can do it on a Debian system:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;python3-pip&lt;/code&gt;, with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;$ sudo apt install python3-pip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install pipx:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;$ pip install --user pipx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Didn&amp;rsquo;t we want avoid that? Yes! We&amp;rsquo;ll clean this up later.&lt;/p&gt;</description></item><item><title>Cross Compiling Rust Binaries with Github Actions</title><link>/cargo-cross/</link><pubDate>Sun, 27 Jun 2021 16:50:00 +0530</pubDate><guid>/cargo-cross/</guid><description>&lt;p&gt;Compiling &lt;em&gt;rust&lt;/em&gt; is slow, specially on low power devices such as a
&lt;em&gt;Raspberry Pi&lt;/em&gt;. I build all my rust utilities with my RPi 4 and sync to
the rest with &lt;a href="https://syncthing.net/"&gt;syncthing&lt;/a&gt;. That was true for
my project, &lt;a href="https://github.com/crodjer/sysit"&gt;&lt;strong&gt;sysit&lt;/strong&gt;&lt;/a&gt;, as well. I
use sysit on all my systems to keep tabs on the resource usage.&lt;/p&gt;
&lt;p&gt;Inspired from how &lt;a href="https://github.com/lotabout/skim/blob/master/.github/workflows/publish-github.yml"&gt;skim&lt;/a&gt;
utilizes cross compilation to build binaries directly using Github
workflows, I incorporated a similar flow in sysit.&lt;/p&gt;</description></item><item><title>Encrypting üîê a Home üè° in Raspberry Pi</title><link>/fscrypt/</link><pubDate>Mon, 24 May 2021 11:22:27 +0530</pubDate><guid>/fscrypt/</guid><description>&lt;blockquote&gt;
&lt;p&gt;;tldr
Use &lt;a href="https://wiki.archlinux.org/title/Fscrypt#Encrypt_a_home_directory"&gt;fscrypt&lt;/a&gt; to encrypt your
home partition, with a few simple steps.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="why-encryption"&gt;Why encryption?&lt;/h2&gt;
&lt;p&gt;I prefer to encrypt all my (and my family&amp;rsquo;s) storage at rest.
Encryption is useful in scenarios where someone gains physical access
to your device. This may save you from any losses other than the
material cost of the device. Specially with a Raspberry Pi, it is more
of a worry as how tiny the device is (the SD card is even smaller).
It is much less likely that you &lt;em&gt;lose&lt;/em&gt; your desktop tower. Its
worrying how many people carry around their portable computing devices
(phones/laptops/tables) around without encryption at rest.&lt;/p&gt;</description></item><item><title>Hopping across the country with WireGuard</title><link>/jumper/</link><pubDate>Sun, 21 Feb 2021 19:11:38 +0530</pubDate><guid>/jumper/</guid><description>&lt;p&gt;I need to be able to access all the computers over the
internet as they are spread across the country:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;descartes&lt;/code&gt;: My dad&amp;rsquo;s Debian desktop (1800 km away).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kant&lt;/code&gt;: RPi 3 running Arch (a NAS, printer, a wormhole).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;camus&lt;/code&gt;: RPi 4 running Manjaro (my personal work machine).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nietzsche&lt;/code&gt;: My wife&amp;rsquo;s Manjaro notebook.&lt;/li&gt;
&lt;li&gt;Phones: &lt;code&gt;newton&lt;/code&gt;, &lt;code&gt;feyman&lt;/code&gt;, &lt;code&gt;einstine&lt;/code&gt; and &lt;code&gt;sagan&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kepler&lt;/code&gt;: a tiny Debian on Google Cloud.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;webb&lt;/code&gt;: a tiny Ubuntu Server on Oracle Cloud.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;All the computers actually have different astronomy inspired names.&lt;/p&gt;</description></item><item><title>Cooling the Raspberry Pi 4 with Argon Neo</title><link>/pi-cooling/</link><pubDate>Fri, 08 Jan 2021 10:21:02 +0530</pubDate><guid>/pi-cooling/</guid><description>&lt;p&gt;The Raspberry Pi 4 runs hot, specially when overclocked. As I use it
as my programming machine for my personal projects, I wanted to get
the most out of its CPU.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://twitter.com/__crodjer__/status/1265526804808372224/photo/1"&gt;first case&lt;/a&gt; I ordered for my Pi came with a fan which worked on
3.3V and 5V (too noisy). I setup a circuit which would allow me to
turn it on/off via a GPIO pin controlled by
&lt;a href="https://github.com/crodjer/configs/blob/master/scripts/rpi-fan.py"&gt;this python based service&lt;/a&gt;,
which turns the fan on/off based on certain threshold temperatures.
This did work but the idling Pi would always go beyond the threshold
temperature turning the fan on when. With the threshold at 65¬∞C. I was
getting 1:10 on:off ratio, which meant fan noise every 10 minutes of
idle time.&lt;/p&gt;</description></item><item><title>Some Light in the Background</title><link>/light/</link><pubDate>Wed, 15 Apr 2020 09:22:34 +0530</pubDate><guid>/light/</guid><description>&lt;h4 id="tldr"&gt;tl;dr&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Dark backgrounds are the best. But when one accidentally land
somewhere with a light background with eyes trained for dark, it can
hurt. So, one may as well just make everything light for
consistency.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We love dark backgrounds. They are easier on the eyes, comfortable to
work with in the night/dark rooms. So, we&amp;rsquo;d like everything that
we see on the screen to be dark. And that&amp;rsquo;s the key, &lt;em&gt;everything&lt;/em&gt; must
be dark.&lt;/p&gt;</description></item><item><title>Window Management in OSX with Spark</title><link>/spark/</link><pubDate>Wed, 06 Dec 2017 12:44:55 +0000</pubDate><guid>/spark/</guid><description>&lt;p&gt;I am a big fan of deterministic access to applications windows. That is, to be
able to open them without needing any visual feedback from the screen. Tiling
window managers do this well. On OSX, this can be tricky.&lt;/p&gt;
&lt;p&gt;For a long time, I used a &lt;a href="/two-windows/"&gt;two windows&lt;/a&gt; workflow i.e. all the
applications I need should run in just two windows (applications): the browser
(mail, slack etc.) or the terminal (emacs, tmux, bash). This works, but is
restrictive.&lt;/p&gt;</description></item><item><title>The Purpose Of It All</title><link>/42/</link><pubDate>Wed, 10 May 2017 02:34:01 +0000</pubDate><guid>/42/</guid><description>&lt;blockquote&gt;
&lt;p&gt;If you have some time, I&amp;rsquo;d recommend reading &lt;a href="https://www.goodreads.com/book/show/11987.The_Myth_of_Sisyphus_and_Other_Essays?ac=1&amp;amp;from_search=true"&gt;The Myth of
Sysiphus&lt;/a&gt;
instead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The mind is free, with not much to worry about and starts to wander. It lands on
the question: &amp;ldquo;What is the meaning of it all?&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Its not difficult to arrive at the answer: &amp;ldquo;There isn&amp;rsquo;t a meaning, really&amp;rdquo;, and
sets in an existential crisis.&lt;/p&gt;
&lt;p&gt;But, I&amp;rsquo;d argue that there is a flaw in the question. Meaning isn&amp;rsquo;t something one
should try to look for at all. Maybe, purpose is the right quest. And if you try
to observe (or just use Camus&amp;rsquo; observations), the apparent purpose can be
inferred.&lt;/p&gt;</description></item><item><title>Dynamic DNS with Cloudflare</title><link>/cloudflare-ddns/</link><pubDate>Sat, 18 Mar 2017 05:28:10 +0000</pubDate><guid>/cloudflare-ddns/</guid><description>&lt;p&gt;It is hard to maintain a regular internet uptime with home connections. 1/2
router re-connections per week can be fairly common. When that happens, the
public IP changes with most ISPs. This can be annoying if you want access your
computer remotely (possibly to SSH home). Dynamic DNS is a solution that exists
to solve just that.&lt;/p&gt;
&lt;p&gt;I maintain DNS entries for my domain at
&lt;a href="https://www.cloudflare.com/"&gt;Clouflare&lt;/a&gt;. The latest version of
&lt;a href="https://sourceforge.net/p/ddclient/wiki/Home/"&gt;&lt;code&gt;ddclient&lt;/code&gt;&lt;/a&gt; supports Cloudflare
API, which works well with my ArchLinux box. But ddclient bundled with Raspbian,
is yet to get that update. Cloudflare&amp;rsquo;s API is fairly straight forward, so I
decided to use a curl/systemd based solution on my RaspberryPi.&lt;/p&gt;</description></item><item><title>The two windows workflow</title><link>/two-windows/</link><pubDate>Mon, 27 Feb 2017 06:15:12 +0000</pubDate><guid>/two-windows/</guid><description>&lt;p&gt;I was introduced to OSX for the first time in September, 2015. Coming from a
XMonad/Linux based setup, I was accustomed to powerful and fast window
management. Most available solutions for OSX did not have these qualities. I
tried:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Amethyst&lt;/em&gt;, a window manager with basic XMonad bindings.&lt;/li&gt;
&lt;li&gt;Just type the application name in &lt;em&gt;Alfred&lt;/em&gt;. Initially this was slow, but
quickly became habitual.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Mjolinr&lt;/em&gt;, which is configured in Lua and can actually be quite powerful.&lt;/li&gt;
&lt;li&gt;Numerous other programs out there which try to solve the same problem in
similar fashion.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These programs sort of worked, but they are slow and unresponsive. Alfred based
switching works on application level and not window level. So, I needed some
simpler alternatives.&lt;/p&gt;</description></item><item><title>Decentralized Twitter</title><link>/decentralized-twitter/</link><pubDate>Sat, 11 Feb 2017 15:20:45 +0000</pubDate><guid>/decentralized-twitter/</guid><description>&lt;p&gt;As a social network, twitter has a few fairly unique characteristics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It forces people to be more creative in trying to express the idea within 140
characters.&lt;/li&gt;
&lt;li&gt;Ability to control the content that you receive. Stricter filtering is
possible based on one&amp;rsquo;s interests.&lt;/li&gt;
&lt;li&gt;On platforms such as Quora/Facebook, the feed is not deterministic. That&amp;rsquo;s
not the case with twitter. You see tweets in order and as they happen.
Twitter doesn&amp;rsquo;t try to decide what is important and what is not.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But Twitter has been bleeding money since I have known about it. It has
seemingly created a lot of value in sharing of ideas and news. If it were to go
away, it&amp;rsquo;ll have an (at least temporary) impact on its users.&lt;/p&gt;</description></item><item><title>Navigating with the first telescope</title><link>/telescope/</link><pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate><guid>/telescope/</guid><description>&lt;p&gt;In my &lt;a href="/sky/"&gt;previous post&lt;/a&gt;, I wrote about my initial experiences with stargazing -
primarily to demonstrate that it can be fascinating without fancy
equipment. After those initial sessions, I bought a telescope which magnified my
experience significantly.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Stars. Stars everywhere!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="the-telescope"&gt;The Telescope&lt;/h2&gt;
&lt;p&gt;The primary purpose of an (astronomical) telescope, unlike popular belief, is
not actually magnification. They act as light collectors (think burning a paper
with a converging lens and sunlight).&lt;/p&gt;</description></item><item><title>Gazing in the night sky</title><link>/sky/</link><pubDate>Wed, 04 May 2016 00:00:00 +0000</pubDate><guid>/sky/</guid><description>&lt;p&gt;About 6 months ago, I picked up a new hobby: Stargazing. Starting off with just
naked eyes, I quickly realized that there is actually quite a lot to see without
any optical equipment. &lt;a href="https://play.google.com/store/apps/details?id=com.google.android.stardroid&amp;amp;hl=en"&gt;Sky Map&lt;/a&gt; and &lt;a href="http://stellarium.org/"&gt;Stellarium&lt;/a&gt; are incredibly useful
applications for a dilettante like me.&lt;/p&gt;
&lt;h2 id="dark-adjustment"&gt;Dark adjustment&lt;/h2&gt;
&lt;p&gt;Before any stargazing session, dark adjustment i.e. dilating the pupils
completely to improve night vision, is essential. I turn off all kinds of lights
in the house and listen to podcasts for a while (at least 30 minutes). I go out
to stargaze when the outside looks brighter than inside.&lt;/p&gt;</description></item><item><title>You have infinite email addresses</title><link>/infi-mail/</link><pubDate>Sat, 02 Apr 2016 00:00:00 +0000</pubDate><guid>/infi-mail/</guid><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt;&lt;br&gt;
You can add arbitrary tags to your email address. Any email sent to
&lt;code&gt;your-email+tag@your-provider.ext&lt;/code&gt; will land in the inbox for
&lt;code&gt;your-email@your-provider.ext&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Emails are important. They are your identity on the web. Just like on phone,
you&amp;rsquo;d want to control who can contact you via email. This warrants caution in
signing up at places on the internet. It can be unsafe to register with the
personal email address on new services for multiple reasons:&lt;/p&gt;</description></item><item><title>Switch between networks based on availability</title><link>/route-to/</link><pubDate>Wed, 19 Aug 2015 00:00:00 +0000</pubDate><guid>/route-to/</guid><description>&lt;p&gt;Having been blessed with an unreliable internet, I always have had the need to
change the default route when one goes down. &lt;a href="http://linux.die.net/man/8/ip"&gt;ip&lt;/a&gt; provides you the required
tooling to do that. I had been doing it so often, that I ended up writing a
function to do this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;route_to &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;interface&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;route&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;ip route &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="nv"&gt;$interface&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed -r &lt;span class="s1"&gt;&amp;#39;s/\.0\/[[:digit:]]{2,3} /.1 /&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt; -f -4&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$route&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; sudo ip route del default &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; sudo ip route replace default via &lt;span class="nv"&gt;$route&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;No routes match: &lt;/span&gt;&lt;span class="nv"&gt;$interface&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With this in available in my shell, I can simply do &lt;code&gt;route_to wlan0&lt;/code&gt; and my
system will start using &lt;code&gt;wlan0&lt;/code&gt; as the default interface.&lt;/p&gt;</description></item><item><title>VNC over reverse SSH</title><link>/vnc/</link><pubDate>Sun, 10 May 2015 00:00:00 +0000</pubDate><guid>/vnc/</guid><description>&lt;blockquote&gt;
&lt;p&gt;Note: My &lt;a href="/jumper"&gt;recent article&lt;/a&gt;, talking about WireGuard is a
better and more ergonomic approach to achive this, compared to using
reverse SSH.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;About a year ago, I switched my parents computer (lets call it &lt;code&gt;P&lt;/code&gt;) from the
pre-installed OS (Windows) to Ubuntu. The primary reason for this switch was it
hard for me to debug and fix issues. Things have been smooth after the switch
with no issues which I found hard to fix remotely. What specially has worked is
my ability to log in to the computer when its on through my VPS and service it.&lt;/p&gt;</description></item></channel></rss>