<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Perpetual Amature</title><link>/</link><description>Recent content on The Perpetual Amature</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Wed, 15 Apr 2020 09:22:34 +0530</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Some Light in the Background</title><link>/light/</link><pubDate>Wed, 15 Apr 2020 09:22:34 +0530</pubDate><guid>/light/</guid><description>tl;dr Dark backgrounds are the best. But when one accidentally land somewhere with a light background with eyes trained for dark, it can hurt. So, one may as well just make everything light for consistency.
We love dark backgrounds. They are easier on the eyes, comfortable to work with in the night/dark rooms. So, we&amp;rsquo;d like everything that we see on the screen to be dark. And that&amp;rsquo;s the key, everything must be dark.</description></item><item><title>Window Management in OSX with Spark</title><link>/spark/</link><pubDate>Wed, 06 Dec 2017 12:44:55 +0000</pubDate><guid>/spark/</guid><description>I am a big fan of deterministic access to applications windows. That is, to be able to open them without needing any visual feedback from the screen. Tiling window managers do this well. On OSX, this can be tricky.
For a long time, I used a two windows workflow i.e. all the applications I need should run in just two windows (applications): the browser (mail, slack etc.) or the terminal (emacs, tmux, bash).</description></item><item><title>The Purpose Of It All</title><link>/42/</link><pubDate>Wed, 10 May 2017 02:34:01 +0000</pubDate><guid>/42/</guid><description>If you have some time, I&amp;rsquo;d recommend reading The Myth of Sysiphus instead.
The mind is free, with not much to worry about and starts to wander. It lands on the question: &amp;ldquo;What is the meaning of it all?&amp;rdquo;.
Its not difficult to arrive at the answer: &amp;ldquo;There isn&amp;rsquo;t a meaning, really&amp;rdquo;, and sets in an existential crisis.
But, I&amp;rsquo;d argue that there is a flaw in the question.</description></item><item><title>Dynamic DNS with Cloudflare</title><link>/cloudflare-ddns/</link><pubDate>Sat, 18 Mar 2017 05:28:10 +0000</pubDate><guid>/cloudflare-ddns/</guid><description>It is hard to maintain a regular internet uptime with home connections. 1/2 router re-connections per week can be fairly common. When that happens, the public IP changes with most ISPs. This can be annoying if you want access your computer remotely (possibly to SSH home). Dynamic DNS is a solution that exists to solve just that.
I maintain DNS entries for my domain at Clouflare. The latest version of ddclient supports Cloudflare API, which works well with my ArchLinux box.</description></item><item><title>The two windows workflow</title><link>/two-windows/</link><pubDate>Mon, 27 Feb 2017 06:15:12 +0000</pubDate><guid>/two-windows/</guid><description>I was introduced to OSX for the first time in September, 2015. Coming from a XMonad/Linux based setup, I was accustomed to powerful and fast window management. Most available solutions for OSX did not have these qualities. I tried:
Amethyst, a window manager with basic XMonad bindings. Just type the application name in Alfred. Initially this was slow, but quickly became habitual. Mjolinr, which is configured in Lua and can actually be quite powerful.</description></item><item><title>Decentralized Twitter</title><link>/decentralized-twitter/</link><pubDate>Sat, 11 Feb 2017 15:20:45 +0000</pubDate><guid>/decentralized-twitter/</guid><description>As a social network, twitter has a few fairly unique characteristics:
It forces people to be more creative in trying to express the idea within 140 characters. Ability to control the content that you receive. Stricter filtering is possible based on one&amp;rsquo;s interests. On platforms such as Quora/Facebook, the feed is not deterministic. That&amp;rsquo;s not the case with twitter. You see tweets in order and as they happen. Twitter doesn&amp;rsquo;t try to decide what is important and what is not.</description></item><item><title>Find my code at Github</title><link>/code/</link><pubDate>Sat, 11 Feb 2017 09:48:44 +0000</pubDate><guid>/code/</guid><description>You can find most of the public code I have written at Github.</description></item><item><title>Navigating with the first telescope</title><link>/telescope/</link><pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate><guid>/telescope/</guid><description>In my previous post, I wrote about my initial experiences with stargazing - primarily to demonstrate that it can be fascinating without fancy equipment. After those initial sessions, I bought a telescope which magnified my experience significantly.
Stars. Stars everywhere!
The Telescope The primary purpose of an (astronomical) telescope, unlike popular belief, is not actually magnification. They act as light collectors (think burning a paper with a converging lens and sunlight).</description></item><item><title>Gazing in the night sky</title><link>/sky/</link><pubDate>Wed, 04 May 2016 00:00:00 +0000</pubDate><guid>/sky/</guid><description>About 6 months ago, I picked up a new hobby: Stargazing. Starting off with just naked eyes, I quickly realized that there is actually quite a lot to see without any optical equipment. Sky Map and Stellarium are incredibly useful applications for a dilettante like me.
Dark adjustment Before any stargazing session, dark adjustment i.e. dilating the pupils completely to improve night vision, is essential. I turn off all kinds of lights in the house and listen to podcasts for a while (at least 30 minutes).</description></item><item><title>You have infinite email addresses</title><link>/infi-mail/</link><pubDate>Sat, 02 Apr 2016 00:00:00 +0000</pubDate><guid>/infi-mail/</guid><description>tl;dr
You can add arbitrary tags to your email address. Any email sent to your-email+tag@your-provider.ext will land in the inbox for your-email@your-provider.ext.
Emails are important. They are your identity on the web. Just like on phone, you&amp;rsquo;d want to control who can contact you via email. This warrants caution in signing up at places on the internet. It can be unsafe to register with the personal email address on new services for multiple reasons:</description></item><item><title>Categorizing archives by year with Hakyll</title><link>/hakyll-years/</link><pubDate>Mon, 31 Aug 2015 00:00:00 +0000</pubDate><guid>/hakyll-years/</guid><description>Recently, I decided to categorize my posts under directories named by the year they were created in. For example, this post is placed at: posts/2015/hakyll-years.mkd. I decided to utilize this structure to also group how archives are listed. Inspired from Hakyll&amp;rsquo;s tag functionality I wrote my own group by years functionality. This post tries to explain that. Also, I don&amp;rsquo;t see why a similar logic cannot be used to do simple pagination.</description></item><item><title>Clean URLs with Hakyll</title><link>/hakyll-clean-urls/</link><pubDate>Sun, 30 Aug 2015 00:00:00 +0000</pubDate><guid>/hakyll-clean-urls/</guid><description>The URLs generated by Hakyll, by default also include a .html extension. I have never been a fan of this. When things in reality are driven by the Content-Type header, it is absolutely redundant.
Hakyll provides all the utilities with which we can get cleaner URLs, like this page&amp;rsquo;s. For this, I rely on the fact that most of the web servers automatically serve /foo/index.html for the URL /foo/. To generate clean paths, I define a custom route - cleanRoute:</description></item><item><title>Sitemap with Hakyll</title><link>/hakyll-sitemap/</link><pubDate>Sun, 30 Aug 2015 00:00:00 +0000</pubDate><guid>/hakyll-sitemap/</guid><description>Its fairly trivial to configure Hakyll to generate sitemaps. Sitemaps helps search engines websites. Similar to any typical html page, create a template - templates/sitemap.xml:
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;urlset xmlns=&amp;#34;http://www.sitemaps.org/schemas/sitemap/0.9&amp;#34;&amp;gt; $for(entries)$ &amp;lt;url&amp;gt; &amp;lt;loc&amp;gt;$host$$url$&amp;lt;/loc&amp;gt; &amp;lt;changefreq&amp;gt;weekly&amp;lt;/changefreq&amp;gt; $if(lastmod)$&amp;lt;lastmod&amp;gt;$lastmod$&amp;lt;/lastmod&amp;gt;$endif$ &amp;lt;priority&amp;gt;0.8&amp;lt;/priority&amp;gt; &amp;lt;/url&amp;gt; $endfor$ &amp;lt;/urlset&amp;gt; Then, using the templates, create a rule which uses all the pages from the site as entries. Here is what I do:
create [&amp;#34;sitemap.xml&amp;#34;] $ do route idRoute compile $ do posts &amp;lt;- recentFirst =&amp;lt;&amp;lt; loadAll &amp;#34;posts/*/*&amp;#34; pages &amp;lt;- loadAll &amp;#34;pages/*&amp;#34; let allPosts = (return (pages ++ posts)) let sitemapCtx = mconcat [ listField &amp;#34;entries&amp;#34; pageCtx allPosts , constField &amp;#34;host&amp;#34; host , defaultContext ] makeItem &amp;#34;&amp;#34; &amp;gt;&amp;gt;= loadAndApplyTemplate &amp;#34;templates/sitemap.</description></item><item><title>Testing tornado websockets without third party clients</title><link>/ws-test/</link><pubDate>Sat, 22 Aug 2015 00:00:00 +0000</pubDate><guid>/ws-test/</guid><description>Recently, I built an encrypted chat service, which was based on tornado and ember.js. The project itself had grave security issues, so I shut it down, but while working on it I learned a few new things and testing websockets with tornado is one of them.
Most of the material out there for this suggests developing separate client based tests, which I didn&amp;rsquo;t want to do. Eventually, I figured out that tornado already provides all the utilities to do unit/integration tests for websockets.</description></item><item><title>Using pulseaudio to play system beeps</title><link>/bell/</link><pubDate>Thu, 20 Aug 2015 00:00:00 +0000</pubDate><guid>/bell/</guid><description>Recently, I built a new desktop. After receiving everything, I realized that I was missing the onboard speaker (which creates the annoying beep sound). Ideally, the computer case should have had it, but they don&amp;rsquo;t come with a buzzer anymore. My various applications rely on the system beep, hence I needed to find a software alternative. Turns out it is fairly trivial to configure it to capture alerts with pulseaudio:</description></item><item><title>Switch between networks based on availability</title><link>/route-to/</link><pubDate>Wed, 19 Aug 2015 00:00:00 +0000</pubDate><guid>/route-to/</guid><description>Having been blessed with an unreliable internet, I always have had the need to change the default route when one goes down. ip provides you the required tooling to do that. I had been doing it so often, that I ended up writing a function to do this:
route_to () { interface=$1 route=$(ip route | grep $interface | sed -r &amp;#39;s/\.0\/[[:digit:]]{2,3} /.1 /&amp;#39; | cut -d &amp;#39; &amp;#39; -f -4) if [ -n &amp;#34;$route&amp;#34; ]; then sudo ip route del default &amp;amp;&amp;gt; /dev/null sudo ip route replace default via $route else echo &amp;#34;No routes match: $interface&amp;#34; &amp;gt;&amp;amp;2 fi } With this in available in my shell, I can simply do route_to wlan0 and my system will start using wlan0 as the default interface.</description></item><item><title>VNC over reverse SSH</title><link>/vnc/</link><pubDate>Sun, 10 May 2015 00:00:00 +0000</pubDate><guid>/vnc/</guid><description>About a year ago, I switched my parents computer (lets call it P) from the pre-installed OS (Windows) to Ubuntu. The primary reason for this switch was it hard for me to debug and fix issues. Things have been smooth after the switch with no issues which I found hard to fix remotely. What specially has worked is my ability to log in to the computer when its on through my VPS and service it.</description></item><item><title>The ubiquitous shell</title><link>/bash/</link><pubDate>Thu, 05 Mar 2015 00:00:00 +0000</pubDate><guid>/bash/</guid><description>Nothing makes a terminal feel more like home as one&amp;rsquo;s own shell configuration. My shell is bash, configured through a .bashrc and .profile. Bash is likely to be present in any Unix machine one uses.
Bash is also my primary IDE. This allows for keeping a relatively simple set of utilities and tools to internalize. Coupled with a reliable window manager, workflows can be quickly scripted in the head. Shell scripts are an option as well for more complex flows.</description></item><item><title>Emacs: Flymake with virtualenvs in python-mode</title><link>/emacs-flymake-with-virtualenvs-in-python-mode/</link><pubDate>Tue, 28 Jan 2014 00:00:00 +0000</pubDate><guid>/emacs-flymake-with-virtualenvs-in-python-mode/</guid><description>Lately, I have been writing some python with emacs. So, I have been trying to get the popular checkers (pylint/pyflakes) to work with flymake and virtualenvs. The issues with existing solutions to get flymake working with the checkers is that most of them assume a global version of executable (which would be fine if it weren&amp;rsquo;t for the whole python 2 and 3 incompatibility).
The python-mode in the latest emacs versions (mine is 24.</description></item><item><title>A productive workflow with vim sessions and servers</title><link>/yet-another-vim-productivity-post-server-client/</link><pubDate>Sun, 15 Apr 2012 00:00:00 +0000</pubDate><guid>/yet-another-vim-productivity-post-server-client/</guid><description>You can find lot of posts on the internet which try to tell you how to improve the ways in which Vim is used. Well, here is another one.
#Vim Server, ZSH and Tiles
A Vim instance behaves as a server in which files can be opened through remote applications. Read :help client-server of Vim to know more about this. I generally keep multiple Vim sessions running, described by task they are related to.</description></item><item><title>About</title><link>/about/</link><pubDate>Sun, 01 Apr 2012 12:21:25 +0000</pubDate><guid>/about/</guid><description>Hi, I am Rohan. I read and write code. I frequently read about physics, energy and climate change. After getting depressed enough of the latter, I read fiction or annoy my friends with my ideas or just code.
I like to play table tennis, cricket and chess. I also bought a harmonica. Keep your hands on ears if you see me holding it. And yeah, I maintain a blog, which is so devoid of activity that it should have cobwebs on it.</description></item><item><title>Configure ssh to handle proxies and tunnels seamlessly</title><link>/configure-ssh-to-handle-proxies-and-tunnels-seamlessly/</link><pubDate>Sat, 27 Aug 2011 00:00:00 +0000</pubDate><guid>/configure-ssh-to-handle-proxies-and-tunnels-seamlessly/</guid><description>Recently I opened up on the port 443 over my EC2 instance (more or less like a VPS), so that I can access it through any firewalled proxy too. Apart from getting SSH running to a machine from outside world, I did some cool configuration to have ssh deal with with various remote hosts automatically. It uses the right proxy settings according the host being accessed.
All the stuff which runs over ssh (like scp, git etc.</description></item></channel></rss>