<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Perpetual Amature</title>
    <link>/index.xml</link>
    <description>Recent content on The Perpetual Amature</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 18 Mar 2017 05:28:10 +0000</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Dynamic DNS with Cloudflare</title>
      <link>/cloudflare-ddns/</link>
      <pubDate>Sat, 18 Mar 2017 05:28:10 +0000</pubDate>
      
      <guid>/cloudflare-ddns/</guid>
      <description>

&lt;p&gt;It is hard to maintain a regular internet uptime with home connections. &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt;
router re-connections per week can be fairly common. When that happens, the
public IP changes with most ISPs. This can be annoying if you want to be able to
access your computers remotely (possibly to SSH into the home computer). Dynamic
DNS is a solution that exists to solve just that.&lt;/p&gt;

&lt;p&gt;I maintain DNS entries for my domain at
&lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;Clouflare&lt;/a&gt;. The latest version of
&lt;a href=&#34;https://sourceforge.net/p/ddclient/wiki/Home/&#34;&gt;&lt;code&gt;ddclient&lt;/code&gt;&lt;/a&gt; supports Cloudflare
API, which is what I use as well with my ArchLinux box. But ddclient bundled
with Raspbian, is yet to get that update. Cloudflare&amp;rsquo;s API is fairly straight
forward, so I decided to use a curl/systemd based solution on my RaspberryPi.&lt;/p&gt;

&lt;h1 id=&#34;configuration-information&#34;&gt;Configuration information&lt;/h1&gt;

&lt;p&gt;If you want to set Dynamic DNS with Cloudflare as well, you need to acquire some
configuration information first:&lt;/p&gt;

&lt;h2 id=&#34;cloudflare-configuration-details&#34;&gt;Cloudflare configuration details&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DNS Zone&lt;/code&gt;&lt;br /&gt;
You can get it by visiting the overview page of Cloudflare dashboard (called
Zone ID):
&lt;a href=&#34;https://www.cloudflare.com/a/overview/&#34;&gt;https://www.cloudflare.com/a/overview/&lt;/a&gt;&lt;your-domain&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Auth Email&lt;/code&gt;: This is your cloudflare account email.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Auth Key&lt;/code&gt;: This is your &lt;em&gt;Global API Key&lt;/em&gt; under Cloudflare account settings:
&lt;a href=&#34;https://www.cloudflare.com/a/account/my-account&#34;&gt;https://www.cloudflare.com/a/account/my-account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IDENTIFIER&lt;/code&gt;&lt;br /&gt;
To get the identifier, you need to first set an A record for the subdomain you
want to manage with Dynamic DNS. Then, plug in the subdomain in this curl
query to obtain the identifier:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  curl &amp;quot;https://api.cloudflare.com/client/v4/zones/&amp;lt;your-dns-zone&amp;gt;/dns_records?name=&amp;lt;subdomain&amp;gt;.&amp;lt;your-domain&amp;gt;&amp;quot; \
       --silent -X GET \
       -H &amp;quot;X-Auth-Email: &amp;lt;cloudflare-auth-email&amp;gt;&amp;quot; \
       -H &amp;quot;X-Auth-Key: &amp;lt;cloudflare-auth-key&amp;gt;&amp;quot; \
       -H &amp;quot;Content-Type: application/json&amp;quot; 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ip-address&#34;&gt;IP Address&lt;/h2&gt;

&lt;p&gt;I use &lt;code&gt;dig&lt;/code&gt; with OpenDNS to get the current public IP and
&lt;a href=&#34;https://www.ipify.org/&#34;&gt;https://www.ipify.org/&lt;/a&gt; as a fallback if &lt;code&gt;dig&lt;/code&gt; isn&amp;rsquo;t installed. Using &lt;code&gt;dig&lt;/code&gt; is
faster though and you can install it via &lt;code&gt;dnsutils&lt;/code&gt; (available as an official
package on most systems).&lt;/p&gt;

&lt;h1 id=&#34;the-script&#34;&gt;The script&lt;/h1&gt;

&lt;p&gt;All this information can now be plugged in this bash script to update the DNS
entry on Cloudflare. I have placed it at &lt;code&gt;/usr/local/bin/cloudflare-ddns.sh&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#/usr/bin/env sh

# Get the Zone ID from: https://www.cloudflare.com/a/overview/&amp;lt;your-domain&amp;gt;
DNS_ZONE=&amp;lt;your-dns-zone&amp;gt;

# Get the existing identifier for DNS entry:
# https://api.cloudflare.com/#dns-records-for-a-zone-list-dns-records
IDENTIFIER=&amp;lt;your-domain-dns-entry-identifier&amp;gt;

# Get these from: https://www.cloudflare.com/a/account/my-account
AUTH_EMAIL=&amp;lt;cloudflare-auth-email&amp;gt;
AUTH_KEY=&amp;lt;cloudflare-auth-key&amp;gt;

# Desired domain name
DOMAIN_NAME=&amp;quot;&amp;lt;subdomain&amp;gt;.&amp;lt;your-domain&amp;gt;&amp;quot;

# Get previous IP address
_PREV_IP_FILE=&amp;quot;/tmp/public-ip.txt&amp;quot;
_PREV_IP=$(cat $_PREV_IP_FILE &amp;amp;&amp;gt; /dev/null)

# Install `dig` via `dnsutils` for faster IP lookup.
command -v dig &amp;amp;&amp;gt; /dev/null &amp;amp;&amp;amp; {
    _IP=$(dig +short myip.opendns.com @resolver1.opendns.com)
} || {
    _IP=$(curl --silent https://api.ipify.org)
} || {
    exit 1
}

# If new/previous IPs match, no need for an update.
if [ &amp;quot;$_IP&amp;quot; = &amp;quot;$_PREV_IP&amp;quot; ]; then
    exit 0
fi

_UPDATE=$(cat &amp;lt;&amp;lt;EOF
{ &amp;quot;type&amp;quot;: &amp;quot;A&amp;quot;,
  &amp;quot;name&amp;quot;: &amp;quot;$DOMAIN_NAME&amp;quot;,
  &amp;quot;content&amp;quot;: &amp;quot;$_IP&amp;quot;,
  &amp;quot;ttl&amp;quot;: 120,
  &amp;quot;proxied&amp;quot;: false }
EOF
)

curl &amp;quot;https://api.cloudflare.com/client/v4/zones/$DNS_ZONE/dns_records/$IDENTIFIER&amp;quot; \
     --silent \
     -X PUT \
     -H &amp;quot;Content-Type: application/json&amp;quot; \
     -H &amp;quot;X-Auth-Email: $AUTH_EMAIL&amp;quot; \
     -H &amp;quot;X-Auth-Key: $AUTH_KEY&amp;quot; \
     -d &amp;quot;$_UPDATE&amp;quot; &amp;gt; /tmp/cloudflare-ddns-update.json &amp;amp;&amp;amp; \
     echo $_IP &amp;gt; $_PREV_IP_FILE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Try running &lt;code&gt;cloudflare-ddns.sh&lt;/code&gt; to see if DNS records get updated on
Cloudflare. For debugging purposes, I store the Cloudflare response at:
&lt;code&gt;/tmp/cloudflare-ddns-update.json&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&#34;systemd&#34;&gt;Systemd&lt;/h1&gt;

&lt;p&gt;We&amp;rsquo;ll automate this execution by writing a systemd service and a timer.&lt;/p&gt;

&lt;h2 id=&#34;configuring-the-service&#34;&gt;Configuring the service&lt;/h2&gt;

&lt;p&gt;My systemd service unit looks like this:
&lt;code&gt;/etc/systemd/system/cloudflare-ddns.service&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Unit]
Description=Update DNS entry for this host to current IP

[Service]
Type=oneshot
ExecStart=/bin/sh /usr/local/bin/cloudflare-ddns.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Test the service by running:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl start cloudflare-ddns.service
# Check the results:
sudo journalctl -u cloudflare-ddns
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;setting-up-a-timer&#34;&gt;Setting up a timer&lt;/h2&gt;

&lt;p&gt;Set up a timer, so that DNS update is attempted every 2 minutes:
&lt;code&gt;/etc/systemd/system/cloudflare-ddns.timer&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Unit]
Description=Update DNS entry in cloudflare every 2 minutes

[Timer]
OnBootSec=1min
OnCalendar=*:0/2
Unit=cloudflare-ddns.service

[Install]
WantedBy=basic.target
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To enable the timer, run:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl enable cloudflare-ddns.timer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that&amp;rsquo;s it, now the system&amp;rsquo;s IP will be kept up to date (within 2 minutes)
for remote access.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The two windows workflow</title>
      <link>/two-windows/</link>
      <pubDate>Mon, 27 Feb 2017 06:15:12 +0000</pubDate>
      
      <guid>/two-windows/</guid>
      <description>&lt;p&gt;I was introduced to OSX for the first time in September, 2015. Coming from a
XMonad/Linux based setup, I was accustomed to powerful and fast window
management. Most available solutions for OSX did not have these qualities. I
tried:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Amethyst&lt;/em&gt;, a window manager with basic XMonad bindings.&lt;/li&gt;
&lt;li&gt;Just type the application name in &lt;em&gt;Alfred&lt;/em&gt;. Initially this was slow, but
quickly became habitual.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Mjolinr&lt;/em&gt;, which is configured in Lua and can actually be quite powerful.&lt;/li&gt;
&lt;li&gt;Numerous other programs out there which try to solve the same problem in
similar fashion.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These programs sort of worked, but they are slow and unresponsive. Alfred based
switching works on application level and not window level. So, I needed some
simpler alternatives.&lt;/p&gt;

&lt;p&gt;Eventually, I noticed that &lt;code&gt;Cmd-Tab&lt;/code&gt; based window switching is fast. So, for
last 6 months, I have been using a two window strategy. That is:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The primary workflow must be dependent on at max two windows.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This means that any application I want to have in my workflow must run in either
of those windows.&lt;/p&gt;

&lt;p&gt;Those windows in my case are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;iTerm2&lt;/em&gt;&lt;br /&gt;
This includes a &lt;code&gt;tmux&lt;/code&gt; session, with multiple windows. The first window will
run a in-terminal emacs client and the rest all windows will various shell
sessions and split configurations of their own. This way, I&amp;rsquo;ll spend most of
my time within a tmux session.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Browser&lt;/em&gt;&lt;br /&gt;
Apart from functioning as a browser, it serves as an host for applications
such as: Mail, Slack, Calender.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are multiple benefits of this setup:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Quick window switching.&lt;/li&gt;
&lt;li&gt;Universal workflow. Use it on RaspberryPi, remote machines, Linux TTY.&lt;/li&gt;
&lt;li&gt;Keystrokes are deterministic. Just queue in the keystrokes and let the
computer execute things at its own pace. This also is my major complaint
against touch phones (compared to say, an old Nokia QWERTY phone).&lt;/li&gt;
&lt;li&gt;I use Vim as a text editor for anything non Clojure. With tmux splits panes,
all of the context stays in the same tmux window.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are drawbacks too:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not every application can run in the browser/terminal. Because of this, you
end up negotiating for alternates.&lt;/li&gt;
&lt;li&gt;Although most of Emacs works well in terminal, some bindings at times won&amp;rsquo;t
work. This isn&amp;rsquo;t a issue for me particularly.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Decentralized Twitter</title>
      <link>/decentralized-twitter/</link>
      <pubDate>Sat, 11 Feb 2017 15:20:45 +0000</pubDate>
      
      <guid>/decentralized-twitter/</guid>
      <description>&lt;p&gt;As a social network, twitter has a few fairly unique characteristics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It forces people to be more creative in trying to express the idea within 140
characters.&lt;/li&gt;
&lt;li&gt;Ability to control the content that you receive. Stricter filtering is
possible based on one&amp;rsquo;s interests.&lt;/li&gt;
&lt;li&gt;On platforms such as Quora/Facebook, the feed is not deterministic. That&amp;rsquo;s
not the case with twitter. You see tweets in order and as they happen.
Twitter doesn&amp;rsquo;t try to decide what is important and what is not.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But Twitter has been bleeding money since I have known about it. It has
seemingly created a lot of value in sharing of ideas and news. If it were to go
away, it&amp;rsquo;ll have an (at least temporary) impact on its users.&lt;/p&gt;

&lt;p&gt;Are there any alternatives to Twitter? Sometime back, I started a casual
discussion about this with a friend. There isn&amp;rsquo;t an obvious service that
currently exists which would fill in the void that Twitter might leave. Other
than what Twitter what already provides, we needed something more resilient. So,
it could be de-centralized, i.e. not dependent on a single server to provide
content.&lt;/p&gt;

&lt;p&gt;Hmm, we want a client-server architecture. It could be a standardized protocol.
Services would spin up for non-tech people so that they could host their content
on them. Then because of the standardized protocol, people could innovate on
clients as well! Continue the discussion on this for a few more seconds and
then&amp;hellip;wait! This already exists. The world already uses it, and quiet
successfully. And, it is an open standard. We were trying to invent blogs and
RSS!&lt;/p&gt;

&lt;p&gt;And there was an end to a short brainstorming session.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Find my code at Github</title>
      <link>/code/</link>
      <pubDate>Sat, 11 Feb 2017 09:48:44 +0000</pubDate>
      
      <guid>/code/</guid>
      <description>&lt;p&gt;You can find most of the public code I have written at
&lt;a href=&#34;https://github.com/crodjer&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Navigating with the first telescope</title>
      <link>/telescope/</link>
      <pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate>
      
      <guid>/telescope/</guid>
      <description>

&lt;p&gt;In my &lt;a href=&#34;/sky/&#34;&gt;previous post&lt;/a&gt;, I wrote about my initial experiences with stargazing -
primarily to demonstrate that it can be fascinating without fancy
equipment. After those initial sessions, I bought a telescope which magnified my
experience significantly.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Stars. Stars everywhere!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;the-telescope&#34;&gt;The Telescope&lt;/h2&gt;

&lt;p&gt;The primary purpose of an (astronomical) telescope, unlike popular belief, is
not actually magnification. They act as light collectors (think burning a paper
with a converging lens and sunlight).&lt;/p&gt;

&lt;p&gt;Because the aperture of our eye is very small (7mm at best), we don&amp;rsquo;t capture
enough light to see faint stars. Telescopes (and binoculars) can have much
larger objectives and hence more surface area where the photon can hit.&lt;/p&gt;

&lt;p&gt;Buying a telescope (or anything?) on an impulse is a bad idea. There are
multiple articles/guides (like &lt;a href=&#34;http://www.skyandtelescope.com/astronomy-equipment/how-to-choose-a-telescope/&#34;&gt;this one&lt;/a&gt;) that talk about various
telescopes and their purposes. I&amp;rsquo;d recommend going through a few of those while
having some direct gazing sessions, helps in setting up the preferences and
expectations.&lt;/p&gt;

&lt;p&gt;I personally enjoy looking at faint stars and deep sky objects or DSOs (star
clusters, galaxies, nebulae) more compared to planets/moon. To start with, the
objects that Charles Messier &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_Messier_objects&#34;&gt;catalogued&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My telescope is a Newtonian reflector with a &lt;strong&gt;114mm&lt;/strong&gt; aperture and &lt;strong&gt;900mm&lt;/strong&gt;
focal length. I have 3 kellner eyepieces of sizes (and magnifications) &lt;strong&gt;25mm
(36x)&lt;/strong&gt;, &lt;strong&gt;10mm (90x)&lt;/strong&gt; and &lt;strong&gt;4mm (225x)&lt;/strong&gt;. It has a &lt;strong&gt;6x24&lt;/strong&gt; (i.e. 6x
magnification and 24mm aperture) finder. To keep the weight (and price) at a
minimum, I got an Altazimuth mount.&lt;/p&gt;

&lt;p&gt;On the web, &lt;a href=&#34;http://www.amazon.com/gp/product/B0000Y8C2Y/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=B0000Y8C2Y&amp;amp;linkCode=as2&amp;amp;tag=crodjer-20&amp;amp;linkId=H3RLG5OMNQX6ZMOH&#34;&gt;this scope&lt;/a&gt; is similar to mine. But I&amp;rsquo;d actually
recommend &lt;a href=&#34;http://www.amazon.com/gp/product/B001DDW9UW/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=B001DDW9UW&amp;amp;linkCode=as2&amp;amp;tag=crodjer-20&amp;amp;linkId=U6A22R7IFLTDIBPQ.amazon.com/gp/product/B001DDW9UW&#34;&gt;Orion XT6&lt;/a&gt; for much better observations or &lt;a href=&#34;http://www.amazon.com/gp/product/B00D12U1IK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=B00D12U1IK&amp;amp;linkCode=as2&amp;amp;tag=crodjer-20&amp;amp;linkId=XUNVRD64WYTFUT6U&#34;&gt;Orion StarBlast 4.5&lt;/a&gt;
for its portability.&lt;/p&gt;

&lt;h2 id=&#34;finding-things&#34;&gt;Finding things&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Star_hopping#The_technique&#34;&gt;Star hopping&lt;/a&gt; is the technique that is conventionally used by armature
astronomers. But with star charts, I also have &lt;a href=&#34;http://stellarium.org/&#34;&gt;Stellarium&lt;/a&gt;, with which I get
precise details of much fainter stars. Once having pointed the scope to a bright
star, I synchronize my path with Stellarium. Because I am comparing stars in sky
to a star in telescope, it is possible for me to end up at the exact locations
of a DSO even if I can&amp;rsquo;t discern it because of light pollution.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll write more about this in a future post.&lt;/p&gt;

&lt;h2 id=&#34;orion-nebula-m42&#34;&gt;Orion Nebula (M42)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Orion_Nebula&#34;&gt;Orion Nebula&lt;/a&gt; is the brightest diffuse nebula in the sky and lies in the
constellation Orion (which also hosts my favorite star, Betelgeuse). Although it
looks nothing like the colourful and detailed photos on the internet. I see it
as a fuzzy extended grey object, similar to
&lt;a href=&#34;http://messier.seds.org/Pics/History/m42m.jpg&#34;&gt;Charles Messier&amp;rsquo;s sketch&lt;/a&gt;. It is remarkable, nevertheless. The four
young stars in its heart are distinctly noticeable. When Orion was accessible,
it was a ritual for me spend a few minutes on it before anything else.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Orion Nebula is an example of a stellar nursery where new stars are being
born.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;open-star-clusters&#34;&gt;Open star clusters&lt;/h2&gt;

&lt;p&gt;Of all the DSOs, I find open star clusters the most exciting. I like to examine
their finer details, matching each star with Stellarium&amp;rsquo;s rendering.&lt;/p&gt;

&lt;p&gt;The constellation &lt;strong&gt;Canis Major&lt;/strong&gt; hosts a few prominent clusters. &lt;strong&gt;M41&lt;/strong&gt; was
the first cluster I ever saw. It is fairly bright. I even sketched the star
pattern on paper, which now stays on my table at work. &lt;strong&gt;NGC 2362 (Canis Major
cluster)&lt;/strong&gt;, although not actually from the Messier catalogue, is also
interesting. Most of its brightness comes from the star τ Canis Majoris. I
noticed it when I was meandering around the lower part of the constellation.&lt;/p&gt;

&lt;p&gt;I saw a few clusters in and around the &lt;strong&gt;Puppis&lt;/strong&gt; constellation. &lt;strong&gt;M93&lt;/strong&gt; is a
nice and bright cluster. At the time of my observation, M93 was straight above
the star &lt;strong&gt;Asmidiske (ξ Pup)&lt;/strong&gt;. Asmidiske, being yellow, is a sight in
itself. It has two companion stars nearby. &lt;strong&gt;M47&lt;/strong&gt; and &lt;strong&gt;M46&lt;/strong&gt; are categorized
to be in Puppis, but I used Canis Major, Hydra and Monoceros as reference for
them. M47 is bright, but M46 isn&amp;rsquo;t as noticeable with my setup.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Taurus&lt;/strong&gt; had a significance for me as the host to &lt;strong&gt;Pleiades (M45)&lt;/strong&gt;. It is a
cluster of very bright stars, with the brightest few visible without any optical
instruments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;M35&lt;/strong&gt; in &lt;strong&gt;Gemini&lt;/strong&gt; is yet another bright cluster that I observed.&lt;/p&gt;

&lt;h2 id=&#34;planets&#34;&gt;Planets&lt;/h2&gt;

&lt;p&gt;Planets are like stars but brighter and without the twinkling. With a telescope,
a few more details may be seen.&lt;/p&gt;

&lt;p&gt;The planet I have most observed is &lt;strong&gt;Jupiter&lt;/strong&gt;. Initially, to my disappointment,
I could only make out an extend bright white disk. Eventually, my skills
improved (Jupiter moved toward opposition as well) and I could actually make out
the colors and the stripes. By coincidence I even got to see the great red
spot. Jupiter rotates about its axis very fast (8 hour days), and I never had
actually planned a sighting.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By Jupiter&amp;rsquo;s moving toward opposition, its the Earth&amp;rsquo;s movement in between the
Sun and Jupiter which has significance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of all the planets, I was most interested in &lt;strong&gt;Saturn&lt;/strong&gt;. Having straightened my
expectations, I was not disappointed on first sight. The ring is indeed present
and looks beautiful. I haven&amp;rsquo;t been able to see the Cassini&amp;rsquo;s division yet
though. More sitting of Saturn gazing are upcoming.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mars&lt;/strong&gt; is a red/orange disk with no other features visible (yet). I saw
&lt;strong&gt;Venus&lt;/strong&gt; only for a few minutes. Its unlikely that I&amp;rsquo;d be able to see
&lt;strong&gt;Mercury&lt;/strong&gt; from where I am.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Moon&lt;/strong&gt; (although not a planet) can be seen in fine details. It is the only
object which is bright enough to take photos of with my phone&amp;rsquo;s camera. But
other than that, I find it uninteresting. Moreover, it obliterates my eye&amp;rsquo;s dark
adjustment. Moonless nights are the best for stargazing.&lt;/p&gt;

&lt;h2 id=&#34;nebulae-globular-clusters-and-galaxies&#34;&gt;Nebulae, Globular clusters and Galaxies&lt;/h2&gt;

&lt;p&gt;These tend to be faint and the city lights takes away the required contrast for
their visibility. My eyes probably caught photons originating from even the ones
I couldn&amp;rsquo;t identify, because I verify the location I am pointing at based on the
nearby faint stars.&lt;/p&gt;

&lt;p&gt;The DSO which took up most of my time is &lt;strong&gt;M1 (Crab nebula)&lt;/strong&gt;. It is a supernova
remnant in &lt;strong&gt;Taurus&lt;/strong&gt;. I must have put in 6+ hours cumulative in attempts to
observe it. Infact, I remember much of the star patterns near the nebula. But,
wouldn&amp;rsquo;t claim to have seen the nebula itself.&lt;/p&gt;

&lt;p&gt;Another such object is &lt;strong&gt;M78&lt;/strong&gt;, a reflection nebula in &lt;strong&gt;Orion&lt;/strong&gt;. I have the
nearby star patterns for it memorized as well. If at all, I saw a very dark grey
and fuzzy object. &lt;strong&gt;M43&lt;/strong&gt; is nebula right beside Orion nebula. I couldn&amp;rsquo;t
discern it at all though, because of the imposing adjacent nebula.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;M53&lt;/strong&gt;, a globular cluster in Coma Berenices, is visible as a dim round grey
object. &lt;strong&gt;M68&lt;/strong&gt; is a globular cluster in Hydra. But I could not clearly
distinguish it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;M104&lt;/strong&gt; (Sombrero Galaxy) lies near Virgo. I recently started observing it. I
did notice the presence of something, but may just be an illusion. The view
should improve in the future sightings.&lt;/p&gt;

&lt;h2 id=&#34;limiting-magnitude&#34;&gt;Limiting Magnitude&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In astronomy, &lt;a href=&#34;https://en.wikipedia.org/wiki/Limiting_magnitude&#34;&gt;limiting magnitude&lt;/a&gt; is the faintest apparent magnitude of a
celestial body that is detectable or detected by a given instrument.&lt;br /&gt;
- Wikipedia&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I find figuring out the limiting magnitude for my telescope interesting.
Theoretically, I should be able to see stars up to an apparent magnitude of
&lt;strong&gt;12.8&lt;/strong&gt;, but I can&amp;rsquo;t actually. The lower the apparent magnitude of on object,
the brighter it is. My skills, light pollution, quality of optics and the
atmosphere bring this down significantly. The faintest stars I have seen, with
significant effort, are roughly of magnitude &lt;strong&gt;11.2&lt;/strong&gt;. Usually, I can
conveniently see stars upto &lt;strong&gt;10&lt;/strong&gt; and with a bit of effort (a second or so of
concentration), &lt;strong&gt;10.5&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Because of how our eye are designed, moving it during observations and using
&lt;a href=&#34;https://en.wikipedia.org/wiki/Averted_vision&#34;&gt;averted vision&lt;/a&gt; improves the ability to distinguish very low contrast
objects.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gazing in the night sky</title>
      <link>/sky/</link>
      <pubDate>Wed, 04 May 2016 00:00:00 +0000</pubDate>
      
      <guid>/sky/</guid>
      <description>

&lt;p&gt;About 6 months ago, I picked up a new hobby: Stargazing. Starting off with just
naked eyes, I quickly realized that there is actually quite a lot to see without
any optical equipment. &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.android.stardroid&amp;amp;hl=en&#34;&gt;Sky Map&lt;/a&gt; and &lt;a href=&#34;http://stellarium.org/&#34;&gt;Stellarium&lt;/a&gt; are incredibly useful
applications for a dilettante like me.&lt;/p&gt;

&lt;h2 id=&#34;dark-adjustment&#34;&gt;Dark adjustment&lt;/h2&gt;

&lt;p&gt;Before any stargazing session, dark adjustment i.e. dilating the pupils
completely to improve night vision, is essential. I turn off all kinds of lights
in the house and listen to podcasts for a while (at least 30 minutes).  I go out
to stargaze when the outside looks brighter than inside.&lt;/p&gt;

&lt;p&gt;Avoiding the bright lights from neighbours can be a challenge though. Moon&amp;rsquo;s an
issue as well.&lt;/p&gt;

&lt;h2 id=&#34;constellations&#34;&gt;Constellations&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Apparent_magnitude&#34;&gt;apparent magnitude&lt;/a&gt; (m) of a celestial object is a number that is a
measure of its brightness as seen by an observer on Earth. The smaller the
number, the
brighter a star appears.&lt;br /&gt;
- Wikipedia&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At the time I started, the most identifiable constellation was
&lt;a href=&#34;https://en.wikipedia.org/wiki/Orion_(constellation)&#34;&gt;Orion&lt;/a&gt;. &lt;a href=&#34;https://en.wikipedia.org/wiki/Betelgeuse&#34;&gt;Betelgeuse&lt;/a&gt;, reddish orange star in Orion, very quickly became my
favorite star. It gets the designation α Orionis even though Rigel is the
brightest star in Orion (β Orionis). Betelgeuse&amp;rsquo;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Apparent_magnitude&#34;&gt;apparent magnitude&lt;/a&gt; varies
between 0-1.3, making it at times the brightest star in Orion. The star is
huge - 630 times the radius of the sun. It was the first star (other than the
Sun) to be imaged beyond a point source.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Taurus_(constellation)&#34;&gt;Taurus&lt;/a&gt; is another constellation that I observed in my initial stargazing
period. It extends over a large area, so not as identifiable. But it is a host
for a unique star cluster: &lt;a href=&#34;https://en.wikipedia.org/wiki/Pleiades&#34;&gt;Pleiades&lt;/a&gt;. The 5-6 bright stars in the cluster are
a singular sight with naked eyes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Canis_Major&#34;&gt;Canis Major&lt;/a&gt; also has a significance for me as the host for &lt;a href=&#34;https://en.wikipedia.org/wiki/Sirius&#34;&gt;Sirius&lt;/a&gt; (the
brightest star). Its relatively close, being only about 8.6 light years away.&lt;/p&gt;

&lt;p&gt;There were some other constellations as well, but I haven&amp;rsquo;t paid them too much
attention. Listing some off the top of my head: Gemini, Puppis, Hydra and
Virgo. But I couldn&amp;rsquo;t identify them without Orion / Canis Major as anchors.&lt;/p&gt;

&lt;h2 id=&#34;moon&#34;&gt;Moon&lt;/h2&gt;

&lt;p&gt;Moon&amp;rsquo;s the most noticeable and obvious site in the sky. At times, based on the
shape of the moon&amp;rsquo;s bright portion, I&amp;rsquo;d try to visualize how the Sun, the Moon
and the Earth are positioned relative to each other. The &lt;a href=&#34;https://en.wikipedia.org/wiki/22°_halo&#34;&gt;22° halo&lt;/a&gt; around
the moon is also nice to look at. To be honest though, I am always more
interested in the Moon&amp;rsquo;s absence, since it impacts the visibility of stars
significantly. It also damages my eye&amp;rsquo;s dark adjustment.&lt;/p&gt;

&lt;h2 id=&#34;planets&#34;&gt;Planets&lt;/h2&gt;

&lt;p&gt;The first 6 planets are readily visible to the naked eye. Although, Earth&amp;rsquo;s
little too close to have an astronomical perspective. Because planets are at a
distance and visible as extend objects, they don&amp;rsquo;t twinkle. This makes it easy
to differentiate them from stars. Even &lt;a href=&#34;http://apod.nasa.gov/apod/ap000725.html&#34;&gt;Betelgeuse&lt;/a&gt;
twinkles.&lt;/p&gt;

&lt;p&gt;March this year, Jupiter was at the opposition (Earth being roughly in between
the Sun and Jupiter) and had its closest approach to us. Hence, it was at its
brightest.&lt;/p&gt;

&lt;p&gt;Venus is always very bright (3rd brightest after the Sun and the Moon), but is
visible near the Sunrise and the Sunset (hence called the morning/evening star).&lt;/p&gt;

&lt;p&gt;Mars and Saturn as of now are located nearby. Mars is bright reddish in color
and Saturn is yellowish in color.&lt;/p&gt;

&lt;p&gt;22nd January 2016 was a interesting day for planet watching. The 5 planets were
&lt;a href=&#34;http://news.nationalgeographic.com/2015/12/160120-planet-parade-stargazing-astronomy/&#34;&gt;all aligned&lt;/a&gt; for the first time in over a decade.&lt;/p&gt;

&lt;p&gt;The path that the Sun and the planets take also point toward the flatness of the
solar system. Feels nice to get some empirical evidence of this, against just
having this told.&lt;/p&gt;

&lt;h2 id=&#34;artificial-objects&#34;&gt;Artificial objects&lt;/h2&gt;

&lt;p&gt;A few artificial objects orbiting the Earth can be seen as well. For them, the
sunset happens later (or sunrise earlier) than us, providing us with the dark
background and enough contrast for the sunlight they reflect. The International
Space Station (ISS), because of its size ends up being brighter than even
Venus. &lt;a href=&#34;https://spotthestation.nasa.gov/&#34;&gt;This NASA&amp;rsquo;s site&lt;/a&gt; can be used to plan an ISS sighting.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Satellite_flare#Iridium_flares&#34;&gt;Iridium&lt;/a&gt; satellites&amp;rsquo; flares are also noticeable at times. There are ways to
plan their sightings, but I haven&amp;rsquo;t done that yet.&lt;/p&gt;

&lt;h2 id=&#34;limiting-magnitude-lm&#34;&gt;Limiting Magnitude (LM)&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In astronomy, &lt;a href=&#34;https://en.wikipedia.org/wiki/Limiting_magnitude&#34;&gt;limiting magnitude&lt;/a&gt; is the faintest apparent magnitude of a
celestial body that is detectable or detected by a given instrument.&lt;br /&gt;
- Wikipedia&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I like to calculate the limiting magnitude. This would give me an idea of the
light pollution and what I should expect to see. I notice light pollution in
Pune is (unsurprisingly) more than that in Jaipur. From
&lt;a href=&#34;http://www.imo.net/visual/major/observation/lm&#34;&gt;these charts&lt;/a&gt;, I calculated the LM at Pune to be about 4.5. I came
to doubt that when I eventually started using &lt;a href=&#34;http://stellarium.org/&#34;&gt;Stellarium&lt;/a&gt;. The naked eye LM
at my place is roughly 3.5 - 3.8.&lt;/p&gt;

&lt;p&gt;I should give using the charts another try. At the time, I had used the Tau
(using stars in/near Taurus) chart which has a magnitude gap of 1.62 between 3
and 4 visible stars.&lt;/p&gt;

&lt;h2 id=&#34;wonders&#34;&gt;Wonders&lt;/h2&gt;

&lt;p&gt;Stargazing results in multiple interesting and unsettling thoughts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When I see a star, the photons hitting my eyes are 1000s of year old. For
example: Light from Betelgeuse travels for roughly 643 years to reach us.&lt;/li&gt;
&lt;li&gt;I are literally looking at the past of those stars. But again, at these
scales, the concept of present can be doubted. Einstein talks about the &lt;em&gt;The
relativity of simultaneity&lt;/em&gt; in &lt;a href=&#34;http://www.amazon.com/gp/product/1420946331/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=1420946331&amp;amp;linkCode=as2&amp;amp;tag=crodjer-20&amp;amp;linkId=CY4F7W7SQWMXRNIL&#34;&gt;his book&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The insignificance of the Earth&amp;rsquo;s and us with it in the universe.&lt;/li&gt;
&lt;li&gt;We most probably aren&amp;rsquo;t alone.&lt;/li&gt;
&lt;li&gt;How amazingly useful constellations are in navigating the sky.&lt;/li&gt;
&lt;li&gt;How made up constellations are and the irrational significance humans give to
them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;telescope&#34;&gt;Telescope&lt;/h2&gt;

&lt;p&gt;After a month of naked eye stargazing, I bought a telescope (similar to
&lt;a href=&#34;http://www.amazon.com/gp/product/B0000Y8C2Y/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=B0000Y8C2Y&amp;amp;linkCode=as2&amp;amp;tag=crodjer-20&amp;amp;linkId=H3RLG5OMNQX6ZMOH&#34;&gt;this one&lt;/a&gt; but with better eyepieces) from a local
provider. I&amp;rsquo;ll write about my observations with that over the next few days.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt;&lt;br /&gt;
The post on my experience with a telescope has now been published
&lt;a href=&#34;/telescope/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>You have infinite email addresses</title>
      <link>/infi-mail/</link>
      <pubDate>Sat, 02 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/infi-mail/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt;&lt;br /&gt;
You can add arbitrary tags to your email address. Any email sent to
&lt;code&gt;your-email+tag@your-provider.ext&lt;/code&gt; will land in the inbox for
&lt;code&gt;your-email@your-provider.ext&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Emails are important. They are your identity on the web. Just like on phone,
you&amp;rsquo;d want to control who can contact you via email. This warrants caution in
signing up at places on the internet. It can be unsafe to register with the
personal email address on new services for multiple reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bulk data breaches &lt;a href=&#34;http://www.huffingtonpost.com/entry/biggest-worst-data-breaches-hacks_us_55d4b5a5e4b07addcb44fd9e&#34;&gt;are fairly common&lt;/a&gt;. You don&amp;rsquo;t want your
email address out there for bots around the world to feed on.&lt;/li&gt;
&lt;li&gt;The service you are signing up for may itself be malicious. Or worse, it may
be Facebook!&lt;/li&gt;
&lt;li&gt;Same email address on every service can make it simpler for bots to break
into your accounts once they succeed in attacking one.&lt;/li&gt;
&lt;li&gt;There &lt;a href=&#34;https://www.fullcontact.com/gmail/&#34;&gt;are actual services&lt;/a&gt; dedicated for creating single
points of catastrophic failures utilizing email addresses.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These sound upsetting, but are indeed manageable to an extent. One trick that I
use is &lt;em&gt;tagging the email address&lt;/em&gt;. It is a fairly common practice among
programmers. Most popular email services support this.&lt;/p&gt;

&lt;p&gt;What do I mean by tagging? Lets take Jon&amp;rsquo;s email: &lt;code&gt;jon.snow@email.wf&lt;/code&gt;. His
sister, Arya, will know this address as is. But for the untrustworthy
Lannisters, he tags the email: &lt;code&gt;jon.snow+lannister@email.wf&lt;/code&gt;. When someone
writes to this address: he will receive the mails knowing that Lannisters were
involved.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;email.wf&lt;/code&gt; here is a fictional service, analogous to &lt;code&gt;gmail.com&lt;/code&gt;. I didn&amp;rsquo;t
want to accidentally use an actual email address.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One may use a similar technique while signing up for services on the
internet. Say Jon wants to register on &lt;code&gt;nightswatch.got&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In &lt;em&gt;Night&amp;rsquo;s Watch&lt;/em&gt; registration form, he&amp;rsquo;d use
&lt;code&gt;jon.snow+nighstwatch@email.wf&lt;/code&gt; as the email. The tag &lt;code&gt;+nighstwatch&lt;/code&gt; here is
arbitrarily chosen.&lt;/li&gt;
&lt;li&gt;Jon will get the confirmation mail in the original account. Being prudent,
he&amp;rsquo;ll verify that the mail it does have the correct tag in the &lt;em&gt;to address&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Also, &lt;code&gt;email.wf&lt;/code&gt; lets Jon send emails with the tagged address. This is useful
for talking to the customer care. GMail users can go to:&lt;br /&gt;
&lt;code&gt;Settings -&amp;gt; Accounts and Import -&amp;gt; Add another email address you own&lt;/code&gt;.&lt;br /&gt;
and filling up the form with the tagged address.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This means Jon can have practically infinite email addresses. Why is this
helpful?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jon can collect all the mails from &lt;em&gt;Night&amp;rsquo;s Watch&lt;/em&gt; at one place, specially
when their mails aren&amp;rsquo;t consistent enough to write filters.&lt;/li&gt;
&lt;li&gt;If the credentials for the &lt;em&gt;Night&amp;rsquo;s Watch&lt;/em&gt; account were to be leaked, say
through Phishing, other more important services like the email account itself
would not be as vulnerable.&lt;/li&gt;
&lt;li&gt;One cannot track Jon&amp;rsquo;s movements across various accounts/profiles through his
email.&lt;/li&gt;
&lt;li&gt;Sites which don&amp;rsquo;t allow tags in the email address can be a red flags for
Jon. He can assume that they&amp;rsquo;d have terrible developers/management and look
for alternates.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Making this into a habit will require a bit of discipline. But eventually, it
gets instinctive.&lt;/p&gt;

&lt;p&gt;On a related note, &lt;a href=&#34;http://www.amazon.com/gp/product/1118958470/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=1118958470&amp;amp;linkCode=as2&amp;amp;tag=crodjer-20&amp;amp;linkId=244BG6VSA5AT2K5S&#34;&gt;this&lt;/a&gt; is an interesting book, that talks
about Phishing through email in the real world.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Categorizing archives by year with Hakyll</title>
      <link>/hakyll-years/</link>
      <pubDate>Mon, 31 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>/hakyll-years/</guid>
      <description>&lt;p&gt;Recently, I decided to categorize my posts under directories named by
the year they were created in. For example, this post is placed at:
&lt;code&gt;posts/2015/hakyll-years.mkd&lt;/code&gt;. I decided to utilize this structure to
also group how archives are listed. Inspired from
&lt;a href=&#34;http://jaspervdj.be/hakyll/reference/src/Hakyll-Web-Tags.html&#34;&gt;Hakyll&amp;rsquo;s tag functionality&lt;/a&gt;
I wrote my own group by years functionality. This post tries to
explain that. Also, I don&amp;rsquo;t see why a similar logic cannot be used to
do simple pagination.&lt;/p&gt;

&lt;p&gt;First, like tags, we need to build the list of years. &lt;code&gt;buildYears&lt;/code&gt;
(like &lt;code&gt;buildTags&lt;/code&gt;) will do that:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;buildYears :: MonadMetadata m =&amp;gt; Pattern -&amp;gt; m [(Year, Int)]
buildYears pattern = do
    ids &amp;lt;- getMatches pattern
    return . frequency . (map getYear) $ ids
  where
    frequency xs =  M.toList (M.fromListWith (+) [(x, 1) | x &amp;lt;- xs])

getYear :: Identifier -&amp;gt; Year
getYear = takeBaseName . takeDirectory . toFilePath

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This now can be used in the site &lt;code&gt;Rules&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;  years &amp;lt;- buildYears &amp;quot;posts/*/*&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this, you have a list of years available for other rules to use.
Now, we build an index of posts by years (similar to &lt;code&gt;tagsRules&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;  forM_ years $ \(year, _)-&amp;gt;
      create [yearId year] $ do
         route   idRoute
         compile $ do
           -- Only the posts published in &#39;year&#39;
           posts &amp;lt;- recentFirst =&amp;lt;&amp;lt; loadAll (fromGlob $ &amp;quot;posts/&amp;quot; ++ year ++&amp;quot;/*&amp;quot;)
           let postsCtx = mconcat
                          [ listField &amp;quot;posts&amp;quot; postCtx (return posts)
                          , constField &amp;quot;title&amp;quot; (&amp;quot;Posts published in &amp;quot; ++ year)
                          , defaultContext
                          ]
           makeItem &amp;quot;&amp;quot;
            &amp;gt;&amp;gt;= loadAndApplyTemplate &amp;quot;templates/posts.html&amp;quot; postsCtx
            &amp;gt;&amp;gt;= loadAndApplyTemplate &amp;quot;templates/default.html&amp;quot; postsCtx
            &amp;gt;&amp;gt;= relativizeUrls
            &amp;gt;&amp;gt;= cleanIndexUrls

yearPath :: Year -&amp;gt; FilePath
yearPath year = &amp;quot;archive/&amp;quot; ++ year ++ &amp;quot;/index.html&amp;quot;

yearId :: Year -&amp;gt; Identifier
yearId = fromFilePath . yearPath
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We now have year wise archives which can be accessed through paths
like: &lt;code&gt;/archive/2015/&lt;/code&gt;. Similar to tags, we need to support browsing
through posts by years. &lt;code&gt;renderYears&lt;/code&gt; does that:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;-- Extra blaze related imports
import           Text.Blaze.Html                 (toHtml, toValue, (!))
import           Text.Blaze.Html.Renderer.String (renderHtml)
import qualified Text.Blaze.Html5                as H
import qualified Text.Blaze.Html5.Attributes     as A


renderYears :: [(Year, Int)] -&amp;gt; Compiler String
renderYears years = do
  years&#39; &amp;lt;- forM (reverse . sort $ years) $ \(year, count) -&amp;gt; do
      route&#39; &amp;lt;- getRoute $ yearId year
      return (year, route&#39;, count)
  return . intercalate &amp;quot;, &amp;quot; $ map makeLink years&#39;

  where
    makeLink (year, route&#39;, count) =
      (renderHtml (H.a ! A.href (yearUrl year) $ toHtml year)) ++
      &amp;quot; (&amp;quot; ++ show count ++ &amp;quot;)&amp;quot;
    yearUrl = toValue . toUrl . yearPath
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add this to a pages context like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;  create [&amp;quot;index.html&amp;quot;] $ do
         route   idRoute
         compile $ do
           -- rest of the compiler context
           let indexCtx = mconcat
                          [ -- some context
                          , field &amp;quot;years&amp;quot; (\_ -&amp;gt; renderYears years)
                          , defaultContext
                          ]
           -- rest of the compiler
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;$years$&lt;/code&gt; will be available in the template which will link to year
wise archives with their corresponding per year count.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;See this functionality being used by &lt;a href=&#34;https://github.com/crodjer/rohanjain.in/blob/master/site.hs&#34;&gt;this blog&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, you&amp;rsquo;d notice that years here could easily have been various
categories you may want to have in your blog.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Clean URLs with Hakyll</title>
      <link>/hakyll-clean-urls/</link>
      <pubDate>Sun, 30 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>/hakyll-clean-urls/</guid>
      <description>&lt;p&gt;The URLs generated by &lt;a href=&#34;http://jaspervdj.be/hakyll/&#34;&gt;Hakyll&lt;/a&gt;, by default also include a
&lt;code&gt;.html&lt;/code&gt; extension. I have never been a fan of this. When things in
reality are driven by the &lt;code&gt;Content-Type&lt;/code&gt; header, it is absolutely
redundant.&lt;/p&gt;

&lt;p&gt;Hakyll provides all the utilities with which we can get cleaner URLs,
like &lt;a href=&#34;.&#34;&gt;this page&amp;rsquo;s&lt;/a&gt;. For this, I rely on the fact that most of the
web servers automatically serve &lt;code&gt;/foo/index.html&lt;/code&gt; for the URL
&lt;code&gt;/foo/&lt;/code&gt;. To generate &lt;em&gt;clean&lt;/em&gt; paths, I define a custom route -
&lt;code&gt;cleanRoute&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;cleanRoute :: Routes
cleanRoute = customRoute createIndexRoute
  where
    createIndexRoute ident = takeDirectory p &amp;lt;/&amp;gt; takeBaseName p &amp;lt;/&amp;gt; &amp;quot;index.html&amp;quot;
                            where p = toFilePath ident
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This can now be used in in rule definition:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;  match &amp;quot;pages/*&amp;quot; $ do
         route   $ cleanRoute
         -- the compiler follows
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this, a path say &lt;code&gt;/pages/about.html&lt;/code&gt; will be generated as
&lt;code&gt;/pages/about/index.html&lt;/code&gt;, hence solving the generation problem. We
are only partially done though. The links that Hakyll generates will
also include the &lt;code&gt;/index.html&lt;/code&gt; suffix in every URL. To get rid of that
we define a set of functions:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;cleanIndexUrls :: Item String -&amp;gt; Compiler (Item String)
cleanIndexUrls = return . fmap (withUrls cleanIndex)

cleanIndexHtmls :: Item String -&amp;gt; Compiler (Item String)
cleanIndexHtmls = return . fmap (replaceAll pattern replacement)
    where
      pattern = &amp;quot;/index.html&amp;quot;
      replacement = const &amp;quot;/&amp;quot;

cleanIndex :: String -&amp;gt; String
cleanIndex url
    | idx `isSuffixOf` url = take (length url - length idx) url
    | otherwise            = url
  where idx = &amp;quot;index.html&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;cleanIndexUrls&lt;/code&gt; and &lt;code&gt;cleanIndexHtmls&lt;/code&gt; strip out &lt;code&gt;/index.html&lt;/code&gt; from
all the anchor tags and complete text respectively. These can be used
over a page&amp;rsquo;s compiler like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;         compile $ pandocCompiler
            &amp;gt;&amp;gt;= loadAndApplyTemplate &amp;quot;templates/page.html&amp;quot; pageCtx
            &amp;gt;&amp;gt;= saveSnapshot &amp;quot;content&amp;quot;
            &amp;gt;&amp;gt;= loadAndApplyTemplate &amp;quot;templates/default.html&amp;quot; pageCtx
            &amp;gt;&amp;gt;= relativizeUrls
            &amp;gt;&amp;gt;= cleanIndexUrls -- cleanup href in all anchor tags.
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;This functionality is being used by &lt;a href=&#34;https://github.com/crodjer/rohanjain.in/blob/master/site.hs&#34;&gt;this blog&lt;/a&gt; and
&lt;a href=&#34;https://github.com/irneh/workforpizza/blob/master/site.hs&#34;&gt;irneh/workforpizza&lt;/a&gt; off which this blog is actually
based.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Sitemap with Hakyll</title>
      <link>/hakyll-sitemap/</link>
      <pubDate>Sun, 30 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>/hakyll-sitemap/</guid>
      <description>&lt;p&gt;Its fairly trivial to configure &lt;a href=&#34;http://jaspervdj.be/hakyll/&#34;&gt;Hakyll&lt;/a&gt; to generate
sitemaps. Sitemaps helps search engines websites. Similar to any
typical html page, create a template - &lt;code&gt;templates/sitemap.xml&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;urlset xmlns=&amp;quot;http://www.sitemaps.org/schemas/sitemap/0.9&amp;quot;&amp;gt;
$for(entries)$
    &amp;lt;url&amp;gt;
        &amp;lt;loc&amp;gt;$host$$url$&amp;lt;/loc&amp;gt;
        &amp;lt;changefreq&amp;gt;weekly&amp;lt;/changefreq&amp;gt;
        $if(lastmod)$&amp;lt;lastmod&amp;gt;$lastmod$&amp;lt;/lastmod&amp;gt;$endif$
        &amp;lt;priority&amp;gt;0.8&amp;lt;/priority&amp;gt;
    &amp;lt;/url&amp;gt;
$endfor$
&amp;lt;/urlset&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, using the templates, create a rule which uses all the pages from
the site as entries. Here is what I do:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-haskell&#34;&gt;  create [&amp;quot;sitemap.xml&amp;quot;] $ do
         route   idRoute
         compile $ do
           posts &amp;lt;- recentFirst =&amp;lt;&amp;lt; loadAll &amp;quot;posts/*/*&amp;quot;
           pages &amp;lt;- loadAll &amp;quot;pages/*&amp;quot;
           let allPosts = (return (pages ++ posts))
           let sitemapCtx = mconcat
                            [ listField &amp;quot;entries&amp;quot; pageCtx allPosts
                            , constField &amp;quot;host&amp;quot; host
                            , defaultContext
                            ]
           makeItem &amp;quot;&amp;quot;
            &amp;gt;&amp;gt;= loadAndApplyTemplate &amp;quot;templates/sitemap.xml&amp;quot; sitemapCtx
            &amp;gt;&amp;gt;= cleanIndexHtmls
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This generates &lt;a href=&#34;/sitemap.xml&#34;&gt;/sitemap.xml&lt;/a&gt; which can be submitted to
search engines for indexing.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Testing tornado websockets without third party clients</title>
      <link>/ws-test/</link>
      <pubDate>Sat, 22 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>/ws-test/</guid>
      <description>&lt;p&gt;Recently, I built an encrypted &lt;a href=&#34;http://github.com/crodjer/qotr/&#34;&gt;chat service&lt;/a&gt;, which was based on
&lt;a href=&#34;http://www.tornadoweb.org/&#34;&gt;tornado&lt;/a&gt; and &lt;a href=&#34;http://emberjs.com/&#34;&gt;ember.js&lt;/a&gt;. The project itself had grave security issues, so I
shut it down, but while working on it I learned a few new things and testing
websockets with tornado is one of them.&lt;/p&gt;

&lt;p&gt;Most of the material out there for this suggests developing separate client
based tests, which I didn&amp;rsquo;t want to do. Eventually, I figured out that tornado
already provides all the utilities to do unit/integration tests for websockets.&lt;/p&gt;

&lt;p&gt;First, we will need a websockets based echo server to test, lets call it
&lt;code&gt;ws.py&lt;/code&gt;. The websocket handler would be:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tornado import web, websocket

class Echo(websocket.WebSocketHandler):

    # Open allows for any number arguments, unlike what pylint thinks.
    # pylint: disable=W0221
    def open(self):
        self.write_message(&#39;hello&#39;)

    def on_message(self, message):
        self.write_message(message)

    def on_close(self):
        self.write_message(&#39;bye&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lets define an application which uses the above handler:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;APP = web.Application([
    (r&amp;quot;/&amp;quot;, Echo),
])

if __name__ == &amp;quot;__main__&amp;quot;:
    APP.listen(5000)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, we will test the application out. Create a file, say &lt;code&gt;test_ws.py&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from tornado import testing, httpserver, gen, websocket
from ws import APP

class TestChatHandler(testing.AsyncTestCase):
    pass
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We use tornado&amp;rsquo;s testing wrapper for the integration it provides with the event
loop. Lets tell unittest how to setup the tests:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class TestChatHandler(testing.AsyncTestCase):

    def setUp(self):
        super(TestChatHandler, self).setUp()
        server = httpserver.HTTPServer(APP)
        socket, self.port = testing.bind_unused_port()
        server.add_socket(socket)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We create a http server out of our application and get a socket bound to an
unused port. We then ask the server to accept on the created socket. Don&amp;rsquo;t
forget the &lt;code&gt;super&lt;/code&gt; call, it ensures that the ioloop gets created. &lt;code&gt;unittest&lt;/code&gt;
will now ensure that a server and an ioloop is up and running before running
tests.&lt;/p&gt;

&lt;p&gt;Moving forward, we need to define a helper for creating a websocket connection
to the server. Tornado websocket provides a handly websocket client. It can be
created with &lt;code&gt;websocket.websocket_connect&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    def _mk_connection(self):
        return websocket.websocket_connect(
            &#39;ws://localhost:{}/&#39;.format(self.port)
        )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can write a simple test for this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    @testing.gen_test
    def test_hello(self):
        c = yield self._mk_connection()
        # Get the initial hello from the server.
        response = yield c.read_message()
        # Make sure that we got a &#39;hello&#39; not &#39;bye&#39;
        self.assertEqual(&#39;hello&#39;, response)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;testing.gen_test&lt;/code&gt; is a wrapper over tornado&amp;rsquo;s &lt;code&gt;gen.coroutine&lt;/code&gt;. It runs the test
synchronously under the ioloop that &lt;code&gt;testing.AsyncTestCase&lt;/code&gt; creates in
&lt;code&gt;setUp&lt;/code&gt;. The test checks for the &amp;lsquo;hello&amp;rsquo; message that we expect from the server
on connection.  &lt;code&gt;yield&lt;/code&gt; makes sure that we for the response from the
server. Note that if you write a &lt;code&gt;yield c.read_message()&lt;/code&gt; when a message from
server isn&amp;rsquo;t expected, the coroutine will keep waiting, eventually raising
&lt;code&gt;tornado.ioloop.TimeoutError&lt;/code&gt; (5 seconds by default). Great, we can write lot of
tests using just what we have now.&lt;/p&gt;

&lt;p&gt;The tests can be run via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python -m tornado.testing discover
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This could still be further improved. We need to yield and ignore the &amp;lsquo;hello&amp;rsquo;
message in every test, for every client. And in your application, it may be a
more complicated handshake - possibly a few initial messages. Once you write a
test for that handshake, it needn&amp;rsquo;t be re-written in every test. To avoid that,
we will write an an abstraction over this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    @gen.coroutine
    def _mk_client(self):
        c = yield self._mk_connection()

        # Discard the hello
        # This could be any initial handshake, which needs to be generalized
        # for most of the tests.
        _ = yield c.read_message()

        raise gen.Return(c)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;_mk_client&lt;/code&gt; here is a method in which you could place all the boilerplate. The
key point here is the exception &lt;code&gt;gen.Return(c)&lt;/code&gt; we raise in the end. &lt;code&gt;return&lt;/code&gt;
with a value is allowed only after Python &lt;code&gt;3.3&lt;/code&gt;, so &lt;code&gt;tornado.gen&lt;/code&gt; uses the value
associated with this exception as the coroutine&amp;rsquo;s result.&lt;/p&gt;

&lt;p&gt;With &lt;code&gt;_mk_client&lt;/code&gt; available, we can write tests which only include the relevant
code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    @testing.gen_test
    def test_echo(self):
        # A client with the hello taken care of.
        c = yield self._mk_client()

        # Send a &#39;foo&#39; to the server.
        c.write_message(&amp;quot;foo&amp;quot;)
        # Get the &#39;foo&#39; back.
        response = yield c.read_message()
        # Make sure that we got a &#39;foo&#39; back and not &#39;bar&#39;.
        self.assertEqual(&#39;foo&#39;, response)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The application built out of this post is available &lt;a href=&#34;https://gist.github.com/crodjer/1e9989ab30fdc32db926&#34;&gt;as a gist&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using pulseaudio to play system beeps</title>
      <link>/bell/</link>
      <pubDate>Thu, 20 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>/bell/</guid>
      <description>&lt;p&gt;Recently, I built a new desktop. After receiving everything, I realized that I
was missing the onboard speaker (which creates the annoying beep sound).
Ideally, the computer case should have had it, but they don&amp;rsquo;t come with a buzzer
anymore. My various applications rely on the system beep, hence I needed to find
a software alternative. Turns out it is fairly trivial to configure it to
capture alerts with pulseaudio:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;start-pulseaudio-x11
pactl upload-sample /usr/share/sounds/freedesktop/stereo/message.oga beep
pactl load-module module-x11-bell sample=beep
xset b 100
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To automatically do it on X11 start, I placed the above in my
&lt;a href=&#34;https://github.com/crodjer/configs/blob/121caa22d4b7c6324fa9a5b22e2d2fcc334afc96/.xsessionrc#L31&#34;&gt;xsessionrc&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Switch between networks based on availability</title>
      <link>/route-to/</link>
      <pubDate>Wed, 19 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>/route-to/</guid>
      <description>&lt;p&gt;Having been blessed with an unreliable internet, I always have had the need to
change the default route when one goes down. &lt;a href=&#34;http://linux.die.net/man/8/ip&#34;&gt;ip&lt;/a&gt; provides you the required
tooling to do that. I had been doing it so often, that I ended up writing a
function to do this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;route_to () {
    interface=$1
    route=$(ip route | grep $interface | sed -r &#39;s/\.0\/[[:digit:]]{2,3} /.1 /&#39; | cut -d &#39; &#39; -f -4)
    if [ -n &amp;quot;$route&amp;quot; ]; then
        sudo ip route del default &amp;amp;&amp;gt; /dev/null
        sudo ip route replace default via $route
    else
        echo &amp;quot;No routes match: $interface&amp;quot; &amp;gt;&amp;amp;2
    fi
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this in available in my shell, I can simply do &lt;code&gt;route_to wlan0&lt;/code&gt; and my
system will start using &lt;code&gt;wlan0&lt;/code&gt; as the default interface.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VNC over reverse SSH</title>
      <link>/vnc/</link>
      <pubDate>Sun, 10 May 2015 00:00:00 +0000</pubDate>
      
      <guid>/vnc/</guid>
      <description>

&lt;p&gt;About a year ago, I switched my parents computer (lets call it &lt;code&gt;P&lt;/code&gt;) from the
pre-installed OS (Windows) to Ubuntu. The primary reason for this switch was it
hard for me to debug and fix issues. Things have been smooth after the switch
with no issues which I found hard to fix remotely. What specially has worked is
my ability to log in to the computer when its on through my VPS and service it.&lt;/p&gt;

&lt;h2 id=&#34;reverse-ssh&#34;&gt;Reverse SSH&lt;/h2&gt;

&lt;p&gt;Whenever &lt;code&gt;P&lt;/code&gt; starts, it makes a reverse SSH connection to my VPS. I use
&lt;a href=&#34;https://www.archlinux.org/packages/community/x86_64/autossh/&#34;&gt;autossh&lt;/a&gt; to monitor and make sure that it is eventually always
connected.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ autossh -M 10001 -f -NXYR 10000:localhost:22 vps
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here &lt;code&gt;vps&lt;/code&gt; is a SSH alias for my personal VPS.&lt;/p&gt;

&lt;p&gt;I can tunnel through the VPS and login to &lt;code&gt;P&lt;/code&gt; via VPS using the following SSH
configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-config&#34;&gt;Host home
     Hostname localhost
     User username
     Port 10000
     ProxyCommand ssh -e none -W %h:%p vps
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To log in to &lt;code&gt;P&lt;/code&gt; transparently, I can simply do:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ssh home
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I use this to resolve most of the issues. Of course it does have the requirement
that the system be booted up and connected to a network.&lt;/p&gt;

&lt;h2 id=&#34;vnc&#34;&gt;VNC&lt;/h2&gt;

&lt;p&gt;There also can be issues which have to do with the GUI (say browser maintenance)
and cannot be done easily over a text SSH session. For those cases, VNC is to
rescue. I create a VNC server on &lt;code&gt;P&lt;/code&gt; using &lt;a href=&#34;https://wiki.archlinux.org/index.php/X11vnc&#34;&gt;x11vnc&lt;/a&gt; and tunnel the VNC
port to my local through SSH. Now, I can access &lt;code&gt;P&lt;/code&gt;&amp;rsquo;s graphical session remotely
via a vnc client (mine is &lt;a href=&#34;https://www.archlinux.org/packages/community/x86_64/tigervnc/&#34;&gt;tigervnc&lt;/a&gt;).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ssh home -L 5900:localhost:5900 &amp;quot;x11vnc -rfbauth ~/.vnc/passwd -display :0 -noxdamage&amp;quot;
$ vncviewer localhost::5900 -QualityLevel 3 -CompressLevel 6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This method is much better compared to the more common solutions such has
Google&amp;rsquo;s VNC chrome extension or other proprietary services. But they are slow
and untrustable 3rd parties. With this way of setting up VNC, everything is
protected under SSH connections.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The ubiquitous shell</title>
      <link>/bash/</link>
      <pubDate>Thu, 05 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>/bash/</guid>
      <description>&lt;p&gt;Nothing makes a terminal feel more like home as one&amp;rsquo;s own shell
configuration. My shell is bash, configured through a &lt;a href=&#34;https://github.com/crodjer/configs/blob/master/.bashrc&#34;&gt;.bashrc&lt;/a&gt; and
&lt;a href=&#34;https://github.com/crodjer/configs/blob/master/.profile&#34;&gt;.profile&lt;/a&gt;. Bash is likely to be present in any Unix machine one
uses.&lt;/p&gt;

&lt;p&gt;Bash is also my primary IDE. This allows for keeping a relatively simple set of
utilities and tools to internalize. Coupled with a reliable window manager,
workflows can be quickly scripted in the head. Shell scripts are an option as
well for more complex flows. This can be done at multiple levels: using uniquely
identifiable comments in commands , bash functions, complete bash script.&lt;/p&gt;

&lt;p&gt;Apart from the standard utilities (sed, cut, cat, tr etc.), I use a few tools as
an aid:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/ggreer/the_silver_searcher&#34;&gt;ag&lt;/a&gt;&lt;/strong&gt; for amazingly fast lookup in files.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/rsync&#34;&gt;rsync&lt;/a&gt;&lt;/strong&gt;, to keep the files synchronized with remote servers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/ggreer/the_silver_searcher&#34;&gt;entr&lt;/a&gt;&lt;/strong&gt; to run build/test commands on a file change. Or, with
rsync, synchronize on modifications.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.archlinux.org/packages/community/any/autojump/&#34;&gt;autojump&lt;/a&gt;&lt;/strong&gt; to jump directly to frequently used directories.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;jq&lt;/a&gt;&lt;/strong&gt; to process JSON output of a command.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tools are designed for the console first, and then bound to editors or
IDEs. Familiarizing oneself to the command line interface makes the maximum
amount of functionality accessible. For example, &lt;a href=&#34;https://github.com/magit/magit&#34;&gt;magit&lt;/a&gt; is a powerful git
interface for Emacs, but can be limiting for complex git operations such as an
interactive rebase.&lt;/p&gt;

&lt;p&gt;Composibility of the various commands can be useful as well, allowing one to
build complex, repeatable commands. For example, the following uses &lt;code&gt;ip&lt;/code&gt; to
change a system&amp;rsquo;s default route, given the interface:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ip route del default &amp;amp;&amp;gt; /dev/null
ip route replace default via $(ip route
     | grep ppp0 # Change this filter as per need.
     | sed -r &#39;s/\.0\/[[:digit:]]{2,3} /.1 /&#39;
     | cut -d &#39; &#39; -f -4)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A great piece of literature on the Unix Philosophy is
&lt;a href=&#34;http://amzn.to/1qFlKCz&#34;&gt;The Art of Unix Programming&lt;/a&gt; by Eric S. Raymond. It also talks about the
Unix interface design.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>